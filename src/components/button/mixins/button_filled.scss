@mixin button_filled(
  $fontWeight,

  $colorBase,
  $fillBase,
  $borderColorBase,
  $borderWidth,
  $borderRadius,

  $colorHovered,
  $fillHovered,
  $borderColorHovered,

  $colorPressed,
  $fillPressed,
  $borderColorPressed,

  $colorFocused,
  $fillFocused,
  $borderColorFocused,
  $boxShadowColorFocused,

  $colorDisabled,
  $fillDisabled,
  $borderDisabled) {

  /* stylelint-disable-next-line declaration-empty-line-before */
  font-weight: #{$fontWeight};
  color: #{$colorBase};
  z-index: 0;

  &::before {
    background: #{$fillBase};
    border: #{$borderWidth} solid #{$borderColorBase};
    border-radius: $borderRadius;
  }

  @media (any-hover: hover) {
    &:not([aria-disabled='true']):hover {
      color: #{$colorHovered};

      &::before {
        background: #{$fillHovered};
        border-color: #{$borderColorHovered};
      }
    }
  }

  &:not([aria-disabled='true']):active {
    color: #{$colorPressed};

    &::before {
      background: #{$fillPressed};
      border-color: #{$borderColorPressed};
    }
  }

  &:not([aria-disabled='true']):focus-visible {
    color: #{$colorFocused};

    &::before {
      background: #{$fillFocused};
      border-color: #{$borderColorFocused};
      box-shadow: 0 0 0 1px #{$boxShadowColorFocused};
    }
  }

  &[aria-disabled='true'] {
    color: #{$colorDisabled};

    &::before {
      background: #{$fillDisabled};
      border-color: #{$borderDisabled};
    }
  }
}
